# Come back to this one 
"""
Given a string array words, return an array of all characters that show up in all strings within the words (including duplicates). 
You may return the answer in any order.

Example 1:
Input: words = ["bella","label","roller"]
Output: ["e","l","l"]

Example 2:
Input: words = ["cool","lock","cook"]
Output: ["c","o"]

"""
# Sort the string and look for longest common substring
class Solution:
    def commonChars(self, words: list[str]) -> list[str]:
        frequency = []
        master = {}
        for word in words:
            res = {}
            for ch in word:
                if ch in res:
                    res[ch] += 1
                else:
                    res[ch] = 1
            frequency.append(res)
            # Here is where we would analyze the frequency after each word. Implement some sort of small section check while 

        print(frequency)
        
    
words = ["cool","lock","cook"]
s = Solution()
print(s.commonChars(words))
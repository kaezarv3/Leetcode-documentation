
class Solution:
    def longestConsecutive(self, nums: list[int]) -> int:
        # Try to visualize Problem, Use a number line to determine how a human would solve it.
        # Using a set because the number of repeated numbers in the input does not matter 
        s = set(nums)
        longest = 0
        for num in nums:
            # (num - 1) represents the beginning of a sequence Checking for start of sequence with if statement 
            # If the current number in the list is not in the set, the current value of it is 1
            if (num - 1) not in s:
                curr = 0
                # While it has a right neighbor in our set, move to the next, increment until we collect and update the longest for each for loop 
                while (num + curr) in s:
                    curr += 1
                longest = max(longest,curr)
        return longest
    
sol = Solution()
# inp = [0,3,7,2,5,8,4,6,0,1]
inp = [100,4,200,1,3,2]
print(sol.longestConsecutive(inp))